{% extends 'Admin/Gestionevenement/admin_base.html.twig' %}

{% block title %}Create User | Eventopia{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary: #0f4c75;
            --primary-light: rgba(15, 76, 117, 0.1);
            --secondary: #3282b8;
            --accent: #00B4D8;
            --accent-light: rgba(0, 180, 216, 0.2);
            --light: #F8F9FF;
            --dark: #1E1E2C;
            --success: #4FD69C;
            --error: #FF6B6B;
            --radius: 8px;
            --radius-lg: 12px;
            --shadow: 0 4px 12px rgba(15, 76, 117, 0.1);
            --sidebar-width: 280px;
        }

        .form-container {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            padding: 2rem;
        }

        .form-card {
            background: white;
            border-radius: var(--radius-lg);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            padding: 2.5rem;
            width: 100%;
            max-width: 900px;
            border-top: 4px solid var(--primary);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .form-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.15);
        }

        .admin-header {
            text-align: center;
            margin-bottom: 2.5rem;
            position: relative;
            padding-bottom: 1.5rem;
        }

        .admin-header::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 80px;
            height: 4px;
            background: linear-gradient(to right, var(--primary), var(--accent));
            border-radius: 2px;
        }

        .admin-title {
            font-size: 2.2rem;
            font-weight: 700;
            color: var(--primary);
            margin: 0 0 0.5rem;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.75rem;
        }

        .form-row {
            display: flex;
            gap: 1.5rem;
            margin-bottom: 1.5rem;
        }

        .form-group {
            flex: 1;
            min-width: 0;
        }

        .form-control {
            width: 100%;
            padding: 0.85rem 1.25rem;
            font-size: 1rem;
            border: 1px solid #e0e0e0;
            border-radius: var(--radius);
            transition: all 0.3s ease;
            background-color: #f9fafb;
        }

        .form-control:focus {
            outline: none;
            border-color: var(--accent);
            box-shadow: 0 0 0 3px var(--accent-light);
        }

        .address-section {
            margin: 2rem 0;
            padding: 1.5rem;
            background: var(--primary-light);
            border-radius: var(--radius);
            border-left: 4px solid var(--primary);
        }

        /* Enhanced Button Styles */
        .btn-submit {
            background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
            color: white;
            border: none;
            padding: 1rem 2rem;
            font-size: 1.1rem;
            border-radius: var(--radius);
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            position: relative;
            overflow: hidden;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }

        .btn-submit:hover {
            transform: translateY(-2px);
            box-shadow: 0 7px 14px rgba(0, 0, 0, 0.15);
        }

        .btn-submit:active {
            transform: translateY(0);
        }
        .form-error, .form-errors {
            color: #dc3545;
            font-size: 0.9rem;
            margin-top: 0.25rem;
            font-weight: 500;
        }

        .btn-submit::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: 0.5s;
        }

        .btn-submit:hover::before {
            left: 100%;
        }

        .btn-return {
            background: white;
            color: var(--primary);
            border: 1px solid var(--primary);
            padding: 1rem 2rem;
            font-size: 1.1rem;
            border-radius: var(--radius);
            transition: all 0.3s ease;
            cursor: pointer;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        }

        .btn-return:hover {
            background: var(--primary-light);
            border-color: var(--secondary);
            color: var(--secondary);
        }

        .form-actions {
            display: flex;
            gap: 1rem;
            margin-top: 2.5rem;
            justify-content: center;
        }

        /* Image Upload Styles */
        .upload-container {
            position: relative;
            height: 200px;
            width: 100%;
            margin-bottom: 1.5rem;
        }

        .image-upload-wrapper {
            height: 100%;
            width: 100%;
            border: 2px dashed #d1d5db;
            border-radius: var(--radius);
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            text-align: center;
            cursor: pointer;
            background: #f9fafb;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .image-upload-wrapper:hover {
            border-color: var(--accent);
            background: var(--accent-light);
        }

        .upload-icon {
            font-size: 2rem;
            color: var(--accent);
            margin-bottom: 0.75rem;
        }

        .upload-text {
            font-size: 0.9rem;
            margin: 0.25rem 0;
            color: var(--dark);
        }

        .upload-hint {
            font-size: 0.8rem;
            color: #6B7280;
        }

        .image-preview {
            width: 100%;
            height: 100%;
            object-fit: cover;
            display: none;
            position: absolute;
            top: 0;
            left: 0;
        }

        .image-input {
            position: absolute;
            width: 1px;
            height: 1px;
            padding: 0;
            margin: -1px;
            overflow: hidden;
            clip: rect(0, 0, 0, 0);
            border: 0;
        }

        /* Responsive adjustments */
        @media (max-width: 768px) {
            .form-row {
                flex-direction: column;
                gap: 1rem;
            }
            
            .form-card {
                padding: 1.5rem;
            }
            
            .form-actions {
                flex-direction: column;
            }
            
            .btn-submit, .btn-return {
                width: 100%;
            }
        }
    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Get the correct elements
            const imageInput = document.querySelector('input[type="file"]');
            const preview = document.createElement('img');
            preview.className = 'image-preview';
            const uploadWrapper = document.querySelector('.image-upload-wrapper');
            
            // Store original content
            const originalContent = uploadWrapper.innerHTML;
            
            // Add preview element to wrapper
            uploadWrapper.appendChild(preview);
            
            // Click handler
            uploadWrapper.addEventListener('click', function(e) {
                e.preventDefault();
                imageInput.click();
            });
            
            // Change handler
            imageInput.addEventListener('change', function(e) {
                const file = e.target.files[0];
                if (file) {
                    if (!file.type.match('image.*')) {
                        alert('Please select an image file (JPEG, PNG)');
                        return;
                    }
                    
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        preview.src = e.target.result;
                        preview.style.display = 'block';
                        uploadWrapper.querySelector('.upload-icon').style.display = 'none';
                        uploadWrapper.querySelector('.upload-text').style.display = 'none';
                        uploadWrapper.querySelector('.upload-hint').style.display = 'none';
                    }
                    reader.readAsDataURL(file);
                } else {
                    preview.style.display = 'none';
                    uploadWrapper.querySelector('.upload-icon').style.display = 'block';
                    uploadWrapper.querySelector('.upload-text').style.display = 'block';
                    uploadWrapper.querySelector('.upload-hint').style.display = 'block';
                }
            });

            // Drag and drop functionality
            ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                uploadWrapper.addEventListener(eventName, preventDefaults, false);
            });

            function preventDefaults(e) {
                e.preventDefault();
                e.stopPropagation();
            }

            ['dragenter', 'dragover'].forEach(eventName => {
                uploadWrapper.addEventListener(eventName, highlight, false);
            });

            ['dragleave', 'drop'].forEach(eventName => {
                uploadWrapper.addEventListener(eventName, unhighlight, false);
            });

            function highlight() {
                uploadWrapper.classList.add('highlight');
            }

            function unhighlight() {
                uploadWrapper.classList.remove('highlight');
            }

            uploadWrapper.addEventListener('drop', handleDrop, false);

            function handleDrop(e) {
                const dt = e.dataTransfer;
                const files = dt.files;
                imageInput.files = files;
                const event = new Event('change');
                imageInput.dispatchEvent(event);
            }
        });
    </script>
{% endblock %}

{% block admin_content %}
    <div class="form-container">
        <div class="form-card">
            <div class="admin-header">
                <h1 class="admin-title">
                    <i class="fas fa-user-plus"></i>
                    {{ form.vars.value.id ? 'Modifier un Utilisateur' : 'Créer un Utilisateur' }}
                </h1>
                <p class="admin-subtitle">
                    {{ form.vars.value.id ? 'Modifiez les informations de l\'utilisateur' : 'Remplissez les informations de l\'utilisateur' }}
                </p>
            </div>

            {{ form_start(form, {'attr': {'novalidate': 'novalidate', 'data-turbo': 'false'}}) }}
                <div class="form-row">
                    <div class="form-group">
                        {{ form_label(form.nom, 'Nom') }}
                        {{ form_widget(form.nom, {'attr': {'class': 'form-control'}}) }}
                        {{ form_errors(form.nom) }}
                    </div>

                    <div class="form-group">
                        {{ form_label(form.prenom, 'Prénom') }}
                        {{ form_widget(form.prenom, {'attr': {'class': 'form-control'}}) }}
                        {{ form_errors(form.prenom) }}
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group">
                        {{ form_label(form.motdepasse, 'Mot de passe') }}
                        {{ form_widget(form.motdepasse, {'attr': {'class': 'form-control'}}) }}
                        {{ form_errors(form.motdepasse) }}
                    </div>

                    <div class="form-group">
                        {{ form_label(form.role, 'Rôle') }}
                        {{ form_widget(form.role, {'attr': {'class': 'form-control'}}) }}
                        {{ form_errors(form.role) }}
                    </div>
                </div>

                <div class="address-section">
                    <h4><i class="fas fa-map-marker-alt"></i> Adresse</h4>
                    <div class="form-row">
                        <div class="form-group">
                            {{ form_label(form.adresse.region, 'Région') }}
                            {{ form_widget(form.adresse.region, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.adresse.region) }}
                        </div>

                        <div class="form-group">
                            {{ form_label(form.adresse.codePostal, 'Code Postal') }}
                            {{ form_widget(form.adresse.codePostal, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.adresse.codePostal) }}
                        </div>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group">
                        {{ form_label(form.tel, 'Téléphone') }}
                        {{ form_widget(form.tel, {'attr': {'class': 'form-control'}}) }}
                        {{ form_errors(form.tel) }}
                    </div>

                    <div class="form-group">
                        {{ form_label(form.email, 'Email') }}
                        {{ form_widget(form.email, {'attr': {'class': 'form-control'}}) }}
                        {{ form_errors(form.email) }}
                    </div>
                </div>

                <div class="form-group">
                    <label>Photo de profil</label>
                    <div class="upload-container">
                        <div class="image-upload-wrapper">
                            <i class="fas fa-cloud-upload-alt upload-icon"></i>
                            <div class="upload-text">Cliquez pour téléverser une image</div>
                            <div class="upload-hint">Formats acceptés: JPG, PNG (max 5MB)</div>
                        </div>
                        {{ form_widget(form.imageurl, {'attr': {
                            'class': 'image-input',
                            'accept': 'image/*',
                            'id': 'user_image'
                        }}) }}
                        <img id="imagePreview" class="image-preview">
                    </div>
                    {{ form_errors(form.imageurl) }}
                </div>

                <div class="form-actions">
                    <button type="submit" class="btn-submit">
                        <i class="fas fa-user-{{ form.vars.value.id ? 'edit' : 'plus' }}"></i>
                        {{ form.vars.value.id ? 'Mettre à jour l\'utilisateur' : 'Créer l\'utilisateur' }}
                    </button>
                    <a href="{{ path('admin_utilisateur') }}" class="btn-return">
                        <i class="fas fa-arrow-left"></i> Retour
                    </a>
                </div>
            {{ form_end(form) }}
        </div>
    </div>
{% endblock %}