{% extends 'base.html.twig' %}

{% block title %}New Password | Eventopia{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary: #03045F;
            --primary-light: #1A1A8F;
            --primary-dark: #02034A;
            --accent: #FF6B6B;
            --light: #f8fafc;
            --dark: #1e293b;
            --success: #10b981;
            --error: #ef4444;
            --warning: #f59e0b;
            --info: #3b82f6;
            --radius: 12px;
            --shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
            --transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
        }

        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            background: white;
            font-family: 'Inter', system-ui, -apple-system, sans-serif;
            min-height: 100vh;
            color: var(--dark);
            line-height: 1.5;
            display: flex;
            flex-direction: column;
            overflow-x: hidden;
        }

        /* Navbar - Left aligned */
        .navbar {
            width: 100%;
            background-color: white;
            padding: 1.25rem 2rem;
            position: fixed;
            top: 0;
            left: 0;
            z-index: 1000;
            display: flex;
            justify-content: flex-start;
            align-items: center;
            border-bottom: 1px solid #f1f1f1;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        }

        .navbar-brand {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--primary);
            text-decoration: none;
            display: flex;
            align-items: center;
        }

        .reset-container {
            width: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 7rem 1.5rem 2rem;
            min-height: 100vh;
        }

        .reset-card {
            width: 100%;
            max-width: 480px;
            background: white;
            border-radius: var(--radius);
            box-shadow: var(--shadow);
            padding: 2.5rem;
            position: relative;
            overflow: hidden;
            border: 1px solid rgba(0, 0, 0, 0.05);
            transform: translateY(20px);
            opacity: 0;
            animation: fadeInUp 0.6s 0.2s forwards;
        }

        @keyframes fadeInUp {
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }

        /* Animated Event Icons */
        .event-icons {
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            pointer-events: none;
            overflow: hidden;
            z-index: 1;
        }

        .event-icon {
            position: absolute;
            color: rgba(3, 4, 95, 0.1);
            font-size: 1.75rem;
            opacity: 0;
            animation: floatIn 8s infinite ease-in-out;
        }

        @keyframes floatIn {
            0% {
                transform: translateY(20px) rotate(0deg);
                opacity: 0;
            }
            20% {
                opacity: 0.15;
            }
            50% {
                transform: translateY(-10px) rotate(5deg);
            }
            80% {
                opacity: 0.15;
            }
            100% {
                transform: translateY(20px) rotate(0deg);
                opacity: 0;
            }
        }

        /* Form Styling */
        .card-content {
            position: relative;
            z-index: 2;
        }

        .reset-header {
            margin-bottom: 2rem;
            text-align: center;
        }

        .reset-title {
            font-size: 1.75rem;
            font-weight: 700;
            margin-bottom: 0.75rem;
            color: var(--primary);
            position: relative;
        }

        .reset-title::after {
            content: '';
            position: absolute;
            bottom: -8px;
            left: 50%;
            transform: translateX(-50%);
            width: 50px;
            height: 3px;
            background: var(--accent);
            border-radius: 3px;
        }

        .reset-instructions {
            color: #64748b;
            margin-bottom: 2rem;
            text-align: center;
        }

        /* Form Group */
        .form-group {
            margin-bottom: 1.2rem;
            position: relative;
            transform: translateY(10px);
            opacity: 0;
            animation: fadeInUp 0.5s 0.4s forwards;
        }

        .form-group.full-width {
            grid-column: span 2;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
            color: var(--dark);
        }

        .form-control {
            width: 100%;
            padding: 0.9rem 1rem;
            border: 2px solid #e2e8f0;
            border-radius: var(--radius);
            font-size: 1rem;
            transition: var(--transition);
            background-color: #f8fafc;
        }

        .form-control:focus {
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(3, 4, 95, 0.1);
            outline: none;
            background: white;
        }

        /* Password Wrapper */
        .password-wrapper {
            position: relative;
        }

        .toggle-password {
            position: absolute;
            right: 15px;
            top: 42px;
            color: #94a3b8;
            cursor: pointer;
            transition: var(--transition);
        }

        .toggle-password:hover {
            color: var(--primary);
        }

        /* Password Strength */
        .password-strength {
            margin-top: 0.5rem;
            height: 4px;
            background: #e2e8f0;
            border-radius: 2px;
            overflow: hidden;
            position: relative;
            transition: var(--transition);
        }

        .strength-meter {
            height: 100%;
            width: 0;
            transition: width 0.3s ease, background 0.3s ease;
        }

        .strength-meter.weak { background: var(--error); width: 25%; }
        .strength-meter.fair { background: var(--warning); width: 50%; }
        .strength-meter.good { background: var(--info); width: 75%; }
        .strength-meter.strong { background: var(--success); width: 100%; }

        .password-rules {
            margin-top: 0.75rem;
            font-size: 0.8rem;
            color: #64748b;
            background: rgba(3, 4, 95, 0.03);
            padding: 0.75rem 1rem;
            border-radius: var(--radius);
            border-left: 3px solid var(--primary);
        }

        .password-rules span {
            display: block;
            margin-bottom: 0.25rem;
            font-weight: 500;
            color: var(--primary);
        }

        .password-rules ul {
            padding-left: 1.25rem;
            margin: 0.25rem 0 0;
        }

        .password-rules li {
            position: relative;
            margin-bottom: 0.25rem;
            transition: color 0.3s ease;
        }

        .password-rules li::before {
            content: 'â€¢';
            position: absolute;
            left: -1rem;
        }

        .password-rules li.valid {
            color: var(--success);
        }

        /* Password Match Indicator */
        .password-match {
            margin-top: 0.5rem;
            font-size: 0.8rem;
            display: flex;
            align-items: center;
            opacity: 0;
            height: 0;
            transition: var(--transition);
        }

        .password-match.show {
            opacity: 1;
            height: auto;
            margin-top: 0.5rem;
        }

        .password-match.valid {
            color: var(--success);
        }

        .password-match.invalid {
            color: var(--error);
        }

        .password-match i {
            margin-right: 0.5rem;
            font-size: 0.9rem;
        }

        /* Submit Button */
        .btn-signup {
            background: var(--primary);
            color: white;
            border: none;
            padding: 0.9rem;
            font-size: 1rem;
            border-radius: var(--radius);
            width: 100%;
            font-weight: 600;
            cursor: pointer;
            margin-top: 0.5rem;
            transition: var(--transition);
            transform: translateY(10px);
            opacity: 0;
            animation: fadeInUp 0.5s 0.6s forwards;
        }

        .btn-signup:hover {
            background: var(--primary-dark);
        }

        .btn-signup:disabled {
            background: #cbd5e1;
            cursor: not-allowed;
        }

        /* Event icon positions */
        .event-icon:nth-child(1) {
            top: 10%;
            left: 10%;
            animation: floatIn 8s infinite;
        }
        .event-icon:nth-child(2) {
            top: 75%;
            left: 15%;
            animation: floatIn 9s 1s infinite;
        }
        .event-icon:nth-child(3) {
            top: 30%;
            left: 85%;
            animation: floatIn 10s 2s infinite;
        }
        .event-icon:nth-child(4) {
            top: 80%;
            left: 80%;
            animation: floatIn 9s 1.5s infinite;
        }

        .form-control.is-invalid {
            border-color: var(--error);
            background-color: rgba(239, 68, 68, 0.05);
        }
        
        .invalid-feedback {
            color: var(--error);
            font-size: 0.8rem;
            margin-top: 0.25rem;
            display: block;
        }
        
        .form-group.has-error {
            animation: shake 0.5s;
        }
        
        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            20%, 60% { transform: translateX(-5px); }
            40%, 80% { transform: translateX(5px); }
        }

        @media (max-width: 768px) {
            .navbar {
                padding: 1rem 1.5rem;
            }
            
            .reset-container {
                padding: 6rem 1.5rem 2rem;
            }
            
            .reset-card {
                padding: 2rem;
            }
        }

        @media (max-width: 480px) {
            .reset-card {
                border: none;
                box-shadow: none;
            }
            
            .event-icons {
                display: none;
            }
            
            .password-rules {
                padding: 0.75rem;
                font-size: 0.75rem;
            }
        }
    </style>
{% endblock %}

{% block body %}
<nav class="navbar">
    <a href="#" class="navbar-brand">
        <img src="{{ asset('images/eventopiaa.png') }}" alt="Eventopia Logo" class="logo-img" height="40px"> Eventopia
    </a>
</nav>

<div class="reset-container">
    <div class="reset-card">
        <div class="event-icons">
            <i class="fas fa-key event-icon"></i>
            <i class="fas fa-shield-alt event-icon"></i>
            <i class="fas fa-lock event-icon"></i>
            <i class="fas fa-user-lock event-icon"></i>
        </div>

        <div class="card-content">
            <div class="reset-header">
                <h2 class="reset-title">Create New Password</h2>
                <p class="reset-instructions">Your new password must be different from previous ones</p>
            </div>

            <form method="post" action="{{ path('reset_password') }}" id="password-reset-form">
                <div class="form-group full-width password-wrapper">
                    <label for="password">New Password</label>
                    <input type="password" id="password" name="password" class="form-control" placeholder="â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢" required>
                    <i class="fas fa-eye toggle-password"></i>
                    <div class="password-strength">
                        <div class="strength-meter" id="strength-meter"></div>
                    </div>
                    <div class="password-rules">
                        <span>Password must contain:</span>
                        <ul>
                            <li id="rule-length">At least 8 characters</li>
                            <li id="rule-uppercase">One uppercase letter</li>
                            <li id="rule-number">One number</li>
                            <li id="rule-special">One special character</li>
                        </ul>
                    </div>
                </div>

                <div class="form-group full-width password-wrapper">
                    <label for="confirm_password">Confirm Password</label>
                    <input type="password" id="confirm_password" name="confirm_password" class="form-control" placeholder="â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢" required>
                    <i class="fas fa-eye toggle-password"></i>
                    <div class="password-match" id="password-match">
                        <i class="fas fa-check-circle"></i>
                        <span>Passwords match</span>
                    </div>
                </div>

                <div class="form-group full-width">
                    <button type="submit" class="btn-signup" id="submit-btn" disabled>
                        Reset Password
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Toggle password visibility
        document.querySelectorAll('.toggle-password').forEach(icon => {
            icon.addEventListener('click', function() {
                const input = this.parentElement.querySelector('input');
                const type = input.getAttribute('type') === 'password' ? 'text' : 'password';
                input.setAttribute('type', type);
                this.classList.toggle('fa-eye');
                this.classList.toggle('fa-eye-slash');
            });
        });

        // Password strength meter and validation
        const passwordInput = document.getElementById('password');
        const confirmInput = document.getElementById('confirm_password');
        const strengthMeter = document.getElementById('strength-meter');
        const passwordMatch = document.getElementById('password-match');
        const submitBtn = document.getElementById('submit-btn');
        const rules = {
            length: document.getElementById('rule-length'),
            uppercase: document.getElementById('rule-uppercase'),
            number: document.getElementById('rule-number'),
            special: document.getElementById('rule-special')
        };

        let isPasswordValid = false;
        let doPasswordsMatch = false;

        passwordInput.addEventListener('input', validatePassword);
        confirmInput.addEventListener('input', checkPasswordMatch);

        function validatePassword() {
            const password = passwordInput.value;
            let strength = 0;
            
            // Check length
            if (password.length >= 8) {
                strength += 1;
                rules.length.classList.add('valid');
            } else {
                rules.length.classList.remove('valid');
            }
            
            // Check uppercase
            if (/[A-Z]/.test(password)) {
                strength += 1;
                rules.uppercase.classList.add('valid');
            } else {
                rules.uppercase.classList.remove('valid');
            }
            
            // Check number
            if (/\d/.test(password)) {
                strength += 1;
                rules.number.classList.add('valid');
            } else {
                rules.number.classList.remove('valid');
            }
            
            // Check special char
            if (/[^A-Za-z0-9]/.test(password)) {
                strength += 1;
                rules.special.classList.add('valid');
            } else {
                rules.special.classList.remove('valid');
            }
            
            // Update strength meter
            strengthMeter.className = 'strength-meter';
            if (strength > 0) {
                strengthMeter.classList.add(
                    strength === 1 ? 'weak' :
                    strength === 2 ? 'fair' :
                    strength === 3 ? 'good' : 'strong'
                );
            }

            // Check if password meets all requirements
            isPasswordValid = strength === 4;
            checkPasswordMatch();
            updateSubmitButton();
        }

        function checkPasswordMatch() {
            const password = passwordInput.value;
            const confirm = confirmInput.value;
            
            if (password && confirm) {
                if (password === confirm) {
                    passwordMatch.classList.add('show', 'valid');
                    passwordMatch.classList.remove('invalid');
                    passwordMatch.querySelector('i').className = 'fas fa-check-circle';
                    passwordMatch.querySelector('span').textContent = 'Passwords match';
                    doPasswordsMatch = true;
                } else {
                    passwordMatch.classList.add('show', 'invalid');
                    passwordMatch.classList.remove('valid');
                    passwordMatch.querySelector('i').className = 'fas fa-times-circle';
                    passwordMatch.querySelector('span').textContent = 'Passwords do not match';
                    doPasswordsMatch = false;
                }
            } else {
                passwordMatch.classList.remove('show');
                doPasswordsMatch = false;
            }
            
            updateSubmitButton();
        }

        function updateSubmitButton() {
            submitBtn.disabled = !(isPasswordValid && doPasswordsMatch);
        }

        // Focus first input on load
        passwordInput.focus();
    });
</script>
{% endblock %}